-- -- JOIN
-- DROP TABLE ORDERS;
-- DROP TABLE CUSTOMER;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER,ORDERS;

-- CUSTOMER, ORDER 테이블 행 개수 구하기
SELECT COUNT(*) FROM CUSTOMER;
SELECT COUNT(*) FROM ORDERS;
SELECT COUNT(*) FROM CUSTOMER, ORDERS;

-- => CROSS JOIN 

-- WHERE 절을 이용해 조인 조건 추가 
-- 테이블이름.속성 : 어느 테이블의 속성인지 가르킴 
SELECT * FROM CUSTOMER, ORDERS WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;
-- 위랑 똑같은 명령어 
SELECT * FROM CUSTOMER INNER JOIN ORDERS ON CUSTOMER.CUSTID = ORDERS.CUSTID;
SELECT * FROM CUSTOMER, ORDERS WHERE CUSTOMER.CUSTID = ORDERS.CUSTID ORDER BY CUSTOMER.CUSTNAME;

-- "고객 이름"과 고객이 주문한 "상품명", "상품 가격" 조회
-- 고객 이름: customer
-- 상품명, 상품가격 : orders

SELECT CUSTNAME,PRODNAME,PRICE FROM CUSTOMER,ORDERS WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;
-- 위랑 같음 
SELECT CUSTNAME,PRODNAME,PRICE FROM CUSTOMER INNER JOIN ORDERS ON CUSTOMER.CUSTID = ORDERS.CUSTID;

-- 고객 이름별로 주문한 제품 총 구매액을 고객 별로 (dafault : 오름차순)정렬 
SELECT CUSTNAME,SUM(PRICE*AMOUNT) AS 'TOTAL_PRICE' FROM CUSTOMER,ORDERS 
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID 
GROUP BY CUSTNAME 
ORDER BY TOTAL_PRICE DESC;

SELECT CUSTNAME,SUM(PRICE*AMOUNT) AS 'TOTAL_PRICE' FROM CUSTOMER INNER JOIN ORDERS 
ON CUSTOMER.CUSTID = ORDERS.CUSTID 
GROUP BY CUSTNAME 
ORDER BY TOTAL_PRICE DESC;